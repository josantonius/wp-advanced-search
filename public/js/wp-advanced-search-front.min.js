document.addEventListener("DOMContentLoaded", function () { Vue.component("VuetifyAdvanceSearch", VuetifyAdvanceSearch.VuetifyAdvanceSearch), Vue.directive("click-outside", { bind: function (e, t, s) { e.clickOutsideEvent = function (i) { e === i.target || e.contains(i.target) || s.context[t.expression](i) }, document.body.addEventListener("click", e.clickOutsideEvent) }, unbind: function (e) { document.body.removeEventListener("click", e.clickOutsideEvent) } }), document.querySelector("#app") && new Vue({ el: "#app", data: e => ({ options: {}, categories: [], needle: "", customNeedle: "", matches: [], allResultsUrl: "https://site.com/post-2/", isPaginated: !1, isNextPage: !1, pageNumber: 0, size: 10, offset: 0 }), mounted() { setTimeout(function () { document.querySelector(".opacity-on").classList.add("opacity-off") }, 100), this.options = this.$refs.vuetify_advance_search.customOptions, this.categories = this.$refs.vuetify_advance_search.customCategories }, methods: { onChangeCategories(e) { this.matches = [], this.categories = e, this.searchBy() }, onChangeOptions(e) { this.matches = [], this.options = e, this.searchBy() }, onChangeMatches(e) { }, onChangeNeedle(e) { this.matches = [], this.needle = e, this.searchBy() }, onExpandResult(e, t) { 0 === e.results.length && this.getSegmentedResults(e, t) }, onNextPage(e) { this.isNextPage = !0, this.offset = e, this.searchBy() }, onClickLastTab(e, t) { this.getSegmentedResults(e, t) }, searchBy() { let e = {}; "string" == typeof this.categories ? e.categories = this.categories : (e.categories = [], this.categories.forEach(t => { e.categories.push(t.id) }), e.categories = e.categories.join(",")); for (let t in this.options) e[t] = this.options[t]; e.needle = this.needle.length > 0 ? this.needle : this.customNeedle, e.offset = this.offset, this.request("post", "search_on_posts", e).then(e => { e.length > 0 && (e.forEach(e => { this.matches.push(e) }), this.isNextPage && (this.$refs.vuetify_advance_search.nextPage(), this.isNextPage = !1)), 0 === this.matches.length ? (this.$refs.vuetify_advance_search.noResults = !0, this.$refs.vuetify_advance_search.showResults = !0) : this.$refs.vuetify_advance_search.noResults = !1, this.$refs.vuetify_advance_search.loader = !1 }).catch(e => { console.log(e) }) }, getSegmentedResults(e, t) { let s = {}; s.id = e.id, s.categories = [], this.categories.forEach(e => { s.categories.push(e.id) }), s.categories = s.categories.join(","); for (let e in this.options) s[e] = this.options[e]; s.needle = this.needle.length > 0 ? this.needle : this.customNeedle, s.offset = t, this.request("post", "get_segmented_results", s).then(t => { t.length > 0 ? t.forEach(t => { e.results.push(t) }) : this.$refs.vuetify_advance_search.hideResultsLoader() }).catch(e => { console.log(e) }) }, getLoaderImage: () => wordpressAdvancedSearchFront.location_loader_gif, getErrorImage: () => wordpressAdvancedSearchFront.location_error_gif, request(e, t, s) { var i = new URLSearchParams; for (var a in s = s || {}, i.append("action", t), i.append("nonce", wordpressAdvancedSearchFront.nonce), s) i.append(a, s[a]); return new Promise((t, s) => axios({ method: e, url: wordpressAdvancedSearchFront.ajax_url, data: i }).then(e => { t(e.data) }).catch(e => { console.log(e), s(e) })) } } }), document.querySelector("#results") && new Vue({ el: "#results", data: e => ({ options: {}, categories: [], needle: "", customNeedle: "", matches: [], allResultsUrl: "https://site.com/post-2/", isPaginated: !1, isNextPage: !1, pageNumber: 0, size: 10, offset: 0 }), mounted() { setTimeout(function () { document.querySelector(".opacity-on").classList.add("opacity-off") }, 100), this.options = this.$refs.vuetify_advance_search.customOptions, this.categories = this.$refs.vuetify_advance_search.customCategories }, methods: { onChangeCategories(e) { this.matches = [], this.categories = e, this.searchBy() }, onChangeOptions(e) { this.matches = [], this.options = e, this.searchBy() }, onChangeMatches(e) { }, onChangeNeedle(e) { this.matches = [], this.needle = e, this.searchBy() }, onExpandResult(e, t) { 0 === e.results.length && this.getSegmentedResults(e, t) }, onNextPage(e) { this.isNextPage = !0, this.offset = e, this.searchBy() }, onClickLastTab(e, t) { this.getSegmentedResults(e, t) }, searchBy() { let e = {}; "string" == typeof this.categories ? e.categories = this.categories : (e.categories = [], this.categories.forEach(t => { e.categories.push(t.id) }), e.categories = e.categories.join(",")); for (let t in this.options) e[t] = this.options[t]; e.needle = this.needle.length > 0 ? this.needle : this.customNeedle, e.offset = this.offset, this.request("post", "search_on_posts", e).then(e => { e.length > 0 && (e.forEach(e => { this.matches.push(e) }), this.isNextPage && (this.$refs.vuetify_advance_search.nextPage(), this.isNextPage = !1)), 0 === this.matches.length ? (this.$refs.vuetify_advance_search.noResults = !0, this.$refs.vuetify_advance_search.showResults = !0) : this.$refs.vuetify_advance_search.noResults = !1, this.$refs.vuetify_advance_search.loader = !1 }).catch(e => { console.log(e) }) }, getSegmentedResults(e, t) { let s = {}; s.id = e.id, s.categories = [], this.categories.forEach(e => { s.categories.push(e.id) }), s.categories = s.categories.join(","); for (let e in this.options) s[e] = this.options[e]; s.needle = this.needle.length > 0 ? this.needle : this.customNeedle, s.offset = t, this.request("post", "get_segmented_results", s).then(t => { t.length > 0 ? t.forEach(t => { e.results.push(t) }) : this.$refs.vuetify_advance_search.hideResultsLoader() }).catch(e => { console.log(e) }) }, getLoaderImage: () => wordpressAdvancedSearchFront.location_loader_gif, getErrorImage: () => wordpressAdvancedSearchFront.location_error_gif, request(e, t, s) { var i = new URLSearchParams; for (var a in s = s || {}, i.append("action", t), i.append("nonce", wordpressAdvancedSearchFront.nonce), s) i.append(a, s[a]); return new Promise((t, s) => axios({ method: e, url: wordpressAdvancedSearchFront.ajax_url, data: i }).then(e => { t(e.data) }).catch(e => { console.log(e), s(e) })) } } }) });